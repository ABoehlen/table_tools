'###############################################################
'#
'# Filename:     TableTools_SimpleSum.ave
'# Author:       Adrian Boehlen
'# Date:         29.06.2014
'# Version:      0.10
'#
'# Purpose:      Summiert die Werte eines Feldes und
'#               schreibt das Ergebnis in die selektierte Zeile
'#
'#               Funktioniert in numerischen und Textfeldern
'#
'###############################################################

'# die Tabelle muss aktiv und im Edit-Modus sein

theTable = av.GetActiveDoc

if (theTable.Is(table).Not) then
  MsgBox.Warning("Start this script from an active Table.","")
  return nil
end

theVTab = theTable.GetVTab

if (theVTab.CanEdit.Not) then
  MsgBox.Warning("Die Tabelle kann nicht bearbeitet werden","Abbruch")
  return nil
end

if (theVTab.IsEditable.Not) then
  theVTab.StartEditingWithRecovery
  theEditstatus = 0
else
  theEditstatus = 1
end

'# Es muss ein Feld aktiv sein

if (theTable.GetActiveField = nil) then
  MsgBox.Warning("Es ist kein Feld aktiv","Abbruch")
  return nil
end

theField = theTable.GetActiveField

if ((theField.getType.AsString = "FIELD_DATE") or (theField.getType.AsString = "FIELD_LOGICAL")) then
  MsgBox.Warning("Der Feldtyp muss ""String"" oder ""Number"" sein","Abbruch")
  return nil
end

'# Definieren der Anzahl Nachkommastellen in Textfeldern

if (theField.getType.AsString = "FIELD_CHAR") then
  dez = MsgBox.Input("Geben Sie die Anzahl Nachkommastellen ein", "Anzahl Nachkommastellen",3.AsString)
  if (dez = nil) then
    return nil
  elseif (dez.IsNumber.Not) then
    MsgBox.Warning("Ungueltige Eingabe","Abbruch")
    return nil
  elseif (dez.AsNumber < 0) then
    MsgBox.Warning("Ungueltige Eingabe","Abbruch")
    return nil  
  end
end

'# Es muss eine Zeile selektiert sein

if (theVTab.GetSelection.Count <> 1) then
  MsgBox.Warning("Die Zeile mit dem Zielfeld muss selektiert sein","Abbruch")
  return nil
end

'# Wert im Zielfeld auf 0 stellen

theSelected = theVTab.GetSelection
for each rec in theSelected
  theVTab.SetValue(theField,rec,0)
end

'# Summe ermitteln

theSet = theVTab
theSelected = theVTab.GetSelection
theSum = 0

for each rec in theSet
  theValue = theVTab.ReturnValueNumber(theField, rec)
  if (not (theValue.IsNull)) then
    theSum = theValue + theSum
  end
end

'# Summe in Textfeldern formatieren

if (theField.getType.AsString = "FIELD_CHAR") then
  if (dez = "0") then
    theSum.SetFormat("d")
  elseif (dez = "1") then
    theSum.SetFormat("d.d")
  elseif (dez = "2") then
    theSum.SetFormat("d.dd")
  elseif (dez = "3") then
    theSum.SetFormat("d.ddd")
  elseif (dez = "4") then
    theSum.SetFormat("d.dddd")
  elseif (dez = "5") then
    theSum.SetFormat("d.ddddd")
  elseif (dez = "6") then
    theSum.SetFormat("d.dddddd")
  elseif (dez = "7") then
    theSum.SetFormat("d.ddddddd")
  elseif (dez = "8") then
    theSum.SetFormat("d.dddddddd")
  elseif (dez = "9") then
    theSum.SetFormat("d.ddddddddd")
  else
    theSum.SetFormat("d.dddddddddd")
  end
end

'# Summe in Zielfeld schreiben

for each rec in theSelected
  if (theField.getType.AsString = "FIELD_CHAR") then
    theVTab.SetValue(theField,rec,theSum.AsString)
  else
    theVTab.SetValue(theField,rec,theSum)
  end
end

'# Anzeige aktualisieren

theVTab.UpdateSelection

'# Editsession beenden, wenn zu Beginn nicht gestartet

if (theEditstatus = 0) then
  theVTab.SetEditable(false)
end
